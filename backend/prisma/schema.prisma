// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
 // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  password    String
  ingredients Ingredient[]
  products    Product[]
}

model Ingredient {
  id             Int                 @id @default(autoincrement())
  name           String
  unitConversion String              // ex: "grama", "litro" — unidade base
  unitPrice      Float               // preço por unidade (ex: preço por grama)
  totalUnit      Float               // quantidade total em tipo unidade (ex: 500 grama)
  totalPrice     Float               // preço bruto total (ex: R$30 para os 500 gramas)
  userId         String
  user           User                @relation(fields: [userId], references: [id])
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  products       ProductIngredient[]
}

model Product {
  id          Int                 @id @default(autoincrement())
  name        String
  userId      String
  price       Float
  user        User                @relation(fields: [userId], references: [id])
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  ingredients ProductIngredient[]
}

model ProductIngredient {
  pk_id           Int      @id @default(autoincrement())
  productId    Int
  ingredientId Int
  quantity     Float

  product      Product  @relation(fields: [productId], references: [id])
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])

  @@unique([productId, ingredientId])  
}
